# TestVector (.tv) file that tests some clocked (sequential)
# ALU operations.

socket PLCC

# 0    17  19        24    27    43 44              52 68
# A-in CLK G C P G Z V ENF OE F-out Cin S1  OSA FTA ENA
#        Vcc             FTF          S0  S2  OSB ENB B-in
#
# ENA# and ENB# enable loading the A and B registers. They are
# the last two bits before the 16-bit B operand at right.

>CLEAR and LOAD A = 0x0007, B = 0x0005
%0007  C V G L X X H L 1 1 0  @0000 0 0 0 0 1 1 1 0 0 %0005

>Change combinational input, Set FTAB = 0, A + B from registers.
>If result is 0001 and overflow, fail: inputs came from bus.
%7FFF  0 V G L X X L L 1 1 0  @000C 0 1 1 0 1 1 0 1 1 %0002

# New test sequence. First, load A, B with 1, FFFC. Add them
# from the combinational inputs in parallel with loading the
# operand registers. Clock the result to the output register
# but select the combinational output and verify that it's
# FFFD.
>ADD FFFC and 0001. Load them to A, B. Load RESULT but bypass
>result with sum = FFFD.
%0001  C V G L X X L L 0 0 0  @FFFD 0 1 1 0 1 1 1 0 0 %FFFC

>Check that F register was loaded by looping it back and
>adding A again. Input pins not used. Clock result and bypass.
>If 0002, 0003, or 0005 appears anywhere, error.
%0003  C V G L X X L L 0 0 0  @FFFE 0 1 1 0 0 0 0 1 1 %0002
%0003  C V G H X X H L 0 0 0  @FFFF 0 1 1 0 0 0 0 1 1 %0002
%0003  C V G L X X L L 0 0 0  @0000 0 1 1 0 0 0 0 1 1 %0002
